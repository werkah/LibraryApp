@model List<Borrow>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@{
    ViewData["Title"] = "Search Results";
}

<h1>@ViewData["Title"]</h1>

@if (Model.Count > 0)
{
    <table>
        <thead>
            <tr>
                <th>Borrow ID</th>
                <th>User ID</th>
                <th>Borrow Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var borrow in Model)
            {
                <tr>
                    <td>@borrow.BorrowId</td>
                    <td>@borrow.UserId</td>
                    <td>@borrow.BorrowDate</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <h4>User with the most borrows:</h4>
        @{
            var usersWithBorrows = Model.GroupBy(b => b.UserId) //pogrupowanie wyzpoczyen po uzytkownikach
                                       .Select(g => new { UserId = g.Key, BorrowCount = g.Count() }) //grupy z uzytkownikiem i liczba wyzpoczyen
                                       .OrderByDescending(u => u.BorrowCount)
                                       .ToList();
            if (usersWithBorrows.Any()) //uzytk z najwieksza liczba
            {
                var userWithMostBorrows = usersWithBorrows.First();
                <p>User ID: @userWithMostBorrows.UserId, Borrows: @userWithMostBorrows.BorrowCount</p>
            }
            else
            {
                <p>No borrows found.</p>
            }
        }
    </div>
}
else
{
    <p>No borrows found for the specified customer.</p>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}